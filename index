import React, { useState, useEffect } from 'react';
import { 
  Home, 
  Bot, 
  Database, 
  BarChart3, 
  Settings, 
  Plus, 
  Upload, 
  Search,
  Filter,
  ChevronRight,
  ChevronLeft,
  MessageSquare,
  Users,
  TrendingUp,
  Star,
  Clock,
  Check,
  X,
  AlertCircle,
  FileText,
  Send,
  Menu,
  Grid3X3,
  Zap,
  Globe,
  Key,
  CreditCard,
  User,
  Bell,
  HelpCircle,
  LogOut,
  MoreVertical,
  Edit,
  Trash2,
  Eye,
  Download,
  Share2,
  Activity,
  DollarSign,
  Sparkles,
  Brain,
  Mic,
  BookOpen,
  Target
} from 'lucide-react';

const XLBotStudio = () => {
  const [activeSection, setActiveSection] = useState('dashboard');
  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);
  const [createBotStep, setCreateBotStep] = useState(0);
  const [selectedTemplate, setSelectedTemplate] = useState(null);
  const [uploadedFiles, setUploadedFiles] = useState([]);
  const [botSettings, setBotSettings] = useState({
    name: '',
    avatar: null,
    formality: 50,
    friendliness: 70,
    expertise: 80,
    model: 'gpt-4'
  });
  const [testMessages, setTestMessages] = useState([]);
  const [currentTestMessage, setCurrentTestMessage] = useState('');

  // Навигационные элементы
  const navigationItems = [
    { id: 'dashboard', label: 'Дашборд', icon: Home },
    { id: 'bots', label: 'Мои боты', icon: Bot },
    { id: 'knowledge', label: 'База знаний', icon: Database },
    { id: 'analytics', label: 'Аналитика', icon: BarChart3 },
    { id: 'integrations', label: 'Интеграции', icon: Zap },
    { id: 'settings', label: 'Настройки', icon: Settings }
  ];

  // Шаблоны ботов
  const botTemplates = [
    { 
      id: 'consultant', 
      name: 'Консультант', 
      icon: MessageSquare,
      description: 'Отвечает на вопросы по вашим курсам и материалам',
      color: 'bg-blue-500'
    },
    { 
      id: 'mentor', 
      name: 'Наставник', 
      icon: Users,
      description: 'Поддерживает и мотивирует учеников',
      color: 'bg-green-500'
    },
    { 
      id: 'sales', 
      name: 'Продавец', 
      icon: Target,
      description: 'Помогает с выбором курса и оформлением покупки',
      color: 'bg-purple-500'
    },
    { 
      id: 'custom', 
      name: 'С нуля', 
      icon: Sparkles,
      description: 'Создайте уникального бота под ваши задачи',
      color: 'bg-gray-500'
    }
  ];

  // AI модели
  const aiModels = [
    { 
      id: 'gpt-4', 
      name: 'GPT-4', 
      description: 'Самая мощная модель OpenAI',
      price: '0.03₽',
      features: ['Высокая точность', 'Понимание контекста', 'Креативность']
    },
    { 
      id: 'claude-3', 
      name: 'Claude 3', 
      description: 'Безопасная и этичная модель',
      price: '0.025₽',
      features: ['Длинный контекст', 'Безопасность', 'Аналитика']
    },
    { 
      id: 'gpt-3.5', 
      name: 'GPT-3.5 Turbo', 
      description: 'Быстрая и экономичная',
      price: '0.002₽',
      features: ['Скорость', 'Экономичность', 'Надежность']
    }
  ];

  // Обработка загрузки файлов
  const handleFileUpload = (e) => {
    const files = Array.from(e.target.files);
    setUploadedFiles([...uploadedFiles, ...files.map(file => ({
      name: file.name,
      size: (file.size / 1024 / 1024).toFixed(2) + ' MB',
      type: file.type
    }))]);
  };

  // Отправка тестового сообщения
  const sendTestMessage = () => {
    if (currentTestMessage.trim()) {
      setTestMessages([
        ...testMessages,
        { type: 'user', text: currentTestMessage },
        { type: 'bot', text: 'Это пример ответа вашего бота. В реальной версии здесь будет ответ на основе загруженной базы знаний.' }
      ]);
      setCurrentTestMessage('');
    }
  };

  // Компонент Sidebar
  const Sidebar = () => (
    <div className={`bg-gray-900 text-white transition-all duration-300 ${sidebarCollapsed ? 'w-16' : 'w-64'} h-screen flex flex-col`}>
      <div className="p-4 flex items-center justify-between border-b border-gray-800">
        {!sidebarCollapsed && (
          <div className="flex items-center space-x-2">
            <Bot className="w-8 h-8 text-indigo-400" />
            <span className="text-xl font-bold">XL Bot Studio</span>
          </div>
        )}
        <button 
          onClick={() => setSidebarCollapsed(!sidebarCollapsed)}
          className="p-1 hover:bg-gray-800 rounded"
        >
          {sidebarCollapsed ? <ChevronRight size={20} /> : <ChevronLeft size={20} />}
        </button>
      </div>
      
      <nav className="flex-1 py-4">
        {navigationItems.map(item => (
          <button
            key={item.id}
            onClick={() => setActiveSection(item.id)}
            className={`w-full flex items-center space-x-3 px-4 py-3 hover:bg-gray-800 transition-colors ${
              activeSection === item.id ? 'bg-gray-800 border-l-4 border-indigo-500' : ''
            }`}
          >
            <item.icon size={20} className={activeSection === item.id ? 'text-indigo-400' : 'text-gray-400'} />
            {!sidebarCollapsed && <span>{item.label}</span>}
          </button>
        ))}
      </nav>

      <div className="p-4 border-t border-gray-800">
        <button className="w-full flex items-center space-x-2 text-gray-400 hover:text-white">
          <User size={20} />
          {!sidebarCollapsed && <span className="text-sm">user@xlschool.ru</span>}
        </button>
      </div>
    </div>
  );

  // Компонент Dashboard
  const Dashboard = () => (
    <div className="p-6 space-y-6">
      <div className="flex justify-between items-center">
        <div>
          <h1 className="text-2xl font-bold text-gray-900">Добро пожаловать в XL Bot Studio!</h1>
          <p className="text-gray-600 mt-1">Управляйте своими AI-ботами из одного места</p>
        </div>
        <button 
          onClick={() => {
            setActiveSection('bots');
            setCreateBotStep(1);
          }}
          className="bg-indigo-600 text-white px-4 py-2 rounded-lg flex items-center space-x-2 hover:bg-indigo-700 transition-colors shadow-md"
        >
          <Plus size={20} />
          <span>Создать бота</span>
        </button>
      </div>

      {/* Статистика */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
        <div className="bg-white p-6 rounded-xl border border-gray-200 hover:shadow-lg transition-shadow">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-gray-600 text-sm">Активные боты</p>
              <p className="text-2xl font-bold text-gray-900 mt-1">3</p>
            </div>
            <Bot className="w-10 h-10 text-indigo-500" />
          </div>
        </div>
        
        <div className="bg-white p-6 rounded-xl border border-gray-200 hover:shadow-lg transition-shadow">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-gray-600 text-sm">Диалоги сегодня</p>
              <p className="text-2xl font-bold text-gray-900 mt-1">147</p>
            </div>
            <MessageSquare className="w-10 h-10 text-green-500" />
          </div>
        </div>
        
        <div className="bg-white p-6 rounded-xl border border-gray-200 hover:shadow-lg transition-shadow">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-gray-600 text-sm">Конверсия</p>
              <p className="text-2xl font-bold text-gray-900 mt-1">12.4%</p>
            </div>
            <TrendingUp className="w-10 h-10 text-purple-500" />
          </div>
        </div>
        
        <div className="bg-white p-6 rounded-xl border border-gray-200 hover:shadow-lg transition-shadow">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-gray-600 text-sm">Средний рейтинг</p>
              <p className="text-2xl font-bold text-gray-900 mt-1">4.8</p>
            </div>
            <Star className="w-10 h-10 text-yellow-500" />
          </div>
        </div>
      </div>

      {/* График активности */}
      <div className="bg-white p-6 rounded-xl border border-gray-200">
        <h3 className="text-lg font-semibold text-gray-900 mb-4">Активность за неделю</h3>
        <div className="h-64 flex items-end justify-between space-x-2">
          {[40, 65, 55, 80, 70, 90, 75].map((height, i) => (
            <div key={i} className="flex-1 bg-indigo-100 hover:bg-indigo-200 transition-colors rounded-t" 
                 style={{height: `${height}%`}}>
              <div className="text-xs text-center mt-2 text-gray-600">
                {['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'][i]}
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Последние диалоги */}
      <div className="bg-white rounded-xl border border-gray-200">
        <div className="p-6 border-b border-gray-200">
          <h3 className="text-lg font-semibold text-gray-900">Последние диалоги</h3>
        </div>
        <div className="divide-y divide-gray-200">
          {[
            { time: '10 мин назад', user: 'Иван П.', bot: 'Консультант курса', status: 'resolved' },
            { time: '25 мин назад', user: 'Мария К.', bot: 'Наставник', status: 'active' },
            { time: '1 час назад', user: 'Алексей С.', bot: 'Продавец', status: 'resolved' }
          ].map((dialog, i) => (
            <div key={i} className="p-4 hover:bg-gray-50 transition-colors">
              <div className="flex items-center justify-between">
                <div className="flex items-center space-x-4">
                  <Clock className="w-4 h-4 text-gray-400" />
                  <span className="text-sm text-gray-600">{dialog.time}</span>
                  <span className="text-sm font-medium text-gray-900">{dialog.user}</span>
                  <span className="text-sm text-gray-600">→ {dialog.bot}</span>
                </div>
                <span className={`px-2 py-1 text-xs rounded-full ${
                  dialog.status === 'resolved' 
                    ? 'bg-green-100 text-green-800' 
                    : 'bg-yellow-100 text-yellow-800'
                }`}>
                  {dialog.status === 'resolved' ? 'Решен' : 'Активен'}
                </span>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );

  // Компонент создания бота
  const CreateBot = () => {
    const steps = ['Выбор типа', 'Загрузка контента', 'Настройка личности', 'Выбор модели', 'Тестирование'];
    
    return (
      <div className="p-6">
        <div className="max-w-4xl mx-auto">
          {/* Progress Steps */}
          <div className="mb-8">
            <div className="flex items-center justify-between">
              {steps.map((step, index) => (
                <div key={index} className="flex items-center">
                  <div className={`w-10 h-10 rounded-full flex items-center justify-center ${
                    index + 1 <= createBotStep 
                      ? 'bg-indigo-600 text-white' 
                      : 'bg-gray-200 text-gray-600'
                  }`}>
                    {index + 1 < createBotStep ? <Check size={20} /> : index + 1}
                  </div>
                  {index < steps.length - 1 && (
                    <div className={`w-24 h-1 ${
                      index + 1 < createBotStep ? 'bg-indigo-600' : 'bg-gray-200'
                    }`} />
                  )}
                </div>
              ))}
            </div>
            <div className="flex justify-between mt-2">
              {steps.map((step, index) => (
                <p key={index} className="text-xs text-gray-600">{step}</p>
              ))}
            </div>
          </div>

          {/* Step Content */}
          <div className="bg-white rounded-xl border border-gray-200 p-8">
            {createBotStep === 1 && (
              <div>
                <h2 className="text-2xl font-bold text-gray-900 mb-2">Выберите тип бота</h2>
                <p className="text-gray-600 mb-6">Выберите готовый шаблон или создайте бота с нуля</p>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  {botTemplates.map(template => (
                    <button
                      key={template.id}
                      onClick={() => setSelectedTemplate(template.id)}
                      className={`p-6 rounded-xl border-2 transition-all ${
                        selectedTemplate === template.id 
                          ? 'border-indigo-600 bg-indigo-50' 
                          : 'border-gray-200 hover:border-gray-300'
                      }`}
                    >
                      <div className={`w-12 h-12 ${template.color} rounded-lg flex items-center justify-center mb-4`}>
                        <template.icon className="w-6 h-6 text-white" />
                      </div>
                      <h3 className="text-lg font-semibold text-gray-900 mb-2">{template.name}</h3>
                      <p className="text-sm text-gray-600">{template.description}</p>
                    </button>
                  ))}
                </div>
                <div className="mt-8 flex justify-end">
                  <button 
                    onClick={() => setCreateBotStep(2)}
                    className="bg-indigo-600 text-white px-6 py-2 rounded-lg hover:bg-indigo-700 transition-colors"
                    disabled={!selectedTemplate}
                  >
                    Далее →
                  </button>
                </div>
              </div>
            )}

            {createBotStep === 2 && (
              <div>
                <h2 className="text-2xl font-bold text-gray-900 mb-2">Загрузите контент</h2>
                <p className="text-gray-600 mb-6">Загрузите материалы курсов, документы и другой контент для обучения бота</p>
                
                <div className="border-2 border-dashed border-gray-300 rounded-xl p-8 text-center hover:border-gray-400 transition-colors">
                  <Upload className="w-12 h-12 text-gray-400 mx-auto mb-4" />
                  <p className="text-gray-600 mb-2">Перетащите файлы сюда или нажмите для выбора</p>
                  <p className="text-sm text-gray-500">PDF, DOC, TXT, MP4 (до 100 MB)</p>
                  <input 
                    type="file" 
                    multiple 
                    onChange={handleFileUpload}
                    className="hidden" 
                    id="file-upload"
                  />
                  <label htmlFor="file-upload" className="mt-4 inline-block bg-gray-100 text-gray-700 px-4 py-2 rounded-lg cursor-pointer hover:bg-gray-200 transition-colors">
                    Выбрать файлы
                  </label>
                </div>

                {uploadedFiles.length > 0 && (
                  <div className="mt-6">
                    <h3 className="text-sm font-medium text-gray-900 mb-3">Загруженные файлы</h3>
                    <div className="space-y-2">
                      {uploadedFiles.map((file, i) => (
                        <div key={i} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                          <div className="flex items-center space-x-3">
                            <FileText className="w-5 h-5 text-gray-400" />
                            <span className="text-sm text-gray-900">{file.name}</span>
                            <span className="text-xs text-gray-500">{file.size}</span>
                          </div>
                          <button className="text-red-500 hover:text-red-700">
                            <X size={16} />
                          </button>
                        </div>
                      ))}
                    </div>
                  </div>
                )}

                <div className="mt-8 flex justify-between">
                  <button 
                    onClick={() => setCreateBotStep(1)}
                    className="text-gray-600 px-6 py-2 hover:text-gray-900 transition-colors"
                  >
                    ← Назад
                  </button>
                  <button 
                    onClick={() => setCreateBotStep(3)}
                    className="bg-indigo-600 text-white px-6 py-2 rounded-lg hover:bg-indigo-700 transition-colors"
                  >
                    Далее →
                  </button>
                </div>
              </div>
            )}

            {createBotStep === 3 && (
              <div>
                <h2 className="text-2xl font-bold text-gray-900 mb-2">Настройте личность бота</h2>
                <p className="text-gray-600 mb-6">Определите характер и стиль общения вашего бота</p>

                <div className="space-y-6">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">Имя бота</label>
                    <input 
                      type="text" 
                      value={botSettings.name}
                      onChange={(e) => setBotSettings({...botSettings, name: e.target.value})}
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                      placeholder="Например: Помощник курса"
                    />
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">Аватар</label>
                    <div className="flex items-center space-x-4">
                      <div className="w-20 h-20 bg-gray-200 rounded-full flex items-center justify-center">
                        {botSettings.avatar ? (
                          <img src={botSettings.avatar} alt="Avatar" className="w-full h-full rounded-full object-cover" />
                        ) : (
                          <User className="w-10 h-10 text-gray-400" />
                        )}
                      </div>
                      <button className="bg-gray-100 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-200 transition-colors">
                        Загрузить фото
                      </button>
                    </div>
                  </div>

                  <div>
                    <h3 className="text-lg font-medium text-gray-900 mb-4">Характер общения</h3>
                    
                    <div className="space-y-4">
                      <div>
                        <div className="flex justify-between mb-2">
                          <label className="text-sm text-gray-700">Формальность</label>
                          <span className="text-sm text-gray-600">{botSettings.formality}%</span>
                        </div>
                        <input 
                          type="range" 
                          min="0" 
                          max="100" 
                          value={botSettings.formality}
                          onChange={(e) => setBotSettings({...botSettings, formality: e.target.value})}
                          className="w-full"
                        />
                        <div className="flex justify-between text-xs text-gray-500 mt-1">
                          <span>Неформальный</span>
                          <span>Официальный</span>
                        </div>
                      </div>

                      <div>
                        <div className="flex justify-between mb-2">
                          <label className="text-sm text-gray-700">Дружелюбность</label>
                          <span className="text-sm text-gray-600">{botSettings.friendliness}%</span>
                        </div>
                        <input 
                          type="range" 
                          min="0" 
                          max="100" 
                          value={botSettings.friendliness}
                          onChange={(e) => setBotSettings({...botSettings, friendliness: e.target.value})}
                          className="w-full"
                        />
                        <div className="flex justify-between text-xs text-gray-500 mt-1">
                          <span>Сдержанный</span>
                          <span>Дружелюбный</span>
                        </div>
                      </div>

                      <div>
                        <div className="flex justify-between mb-2">
                          <label className="text-sm text-gray-700">Экспертность</label>
                          <span className="text-sm text-gray-600">{botSettings.expertise}%</span>
                        </div>
                        <input 
                          type="range" 
                          min="0" 
                          max="100" 
                          value={botSettings.expertise}
                          onChange={(e) => setBotSettings({...botSettings, expertise: e.target.value})}
                          className="w-full"
                        />
                        <div className="flex justify-between text-xs text-gray-500 mt-1">
                          <span>Простой язык</span>
                          <span>Экспертный</span>
                        </div>
                      </div>
                    </div>
                  </div>

                  <div className="bg-gray-50 p-4 rounded-lg">
                    <p className="text-sm text-gray-700 mb-2">Примеры фраз вашего бота:</p>
                    <ul className="text-sm text-gray-600 space-y-1">
                      <li>• "Привет! Рад помочь вам с изучением курса 😊"</li>
                      <li>• "Отличный вопрос! Давайте разберем эту тему подробнее..."</li>
                      <li>• "Вы делаете отличные успехи! Продолжайте в том же духе!"</li>
                    </ul>
                  </div>
                </div>

                <div className="mt-8 flex justify-between">
                  <button 
                    onClick={() => setCreateBotStep(2)}
                    className="text-gray-600 px-6 py-2 hover:text-gray-900 transition-colors"
                  >
                    ← Назад
                  </button>
                  <button 
                    onClick={() => setCreateBotStep(4)}
                    className="bg-indigo-600 text-white px-6 py-2 rounded-lg hover:bg-indigo-700 transition-colors"
                  >
                    Далее →
                  </button>
                </div>
              </div>
            )}

            {createBotStep === 4 && (
              <div>
                <h2 className="text-2xl font-bold text-gray-900 mb-2">Выберите AI модель</h2>
                <p className="text-gray-600 mb-6">Разные модели имеют разные возможности и стоимость</p>

                <div className="space-y-4">
                  {aiModels.map(model => (
                    <button
                      key={model.id}
                      onClick={() => setBotSettings({...botSettings, model: model.id})}
                      className={`w-full p-6 rounded-xl border-2 transition-all text-left ${
                        botSettings.model === model.id 
                          ? 'border-indigo-600 bg-indigo-50' 
                          : 'border-gray-200 hover:border-gray-300'
                      }`}
                    >
                      <div className="flex justify-between items-start">
                        <div>
                          <h3 className="text-lg font-semibold text-gray-900">{model.name}</h3>
                          <p className="text-sm text-gray-600 mt-1">{model.description}</p>
                          <div className="flex space-x-4 mt-3">
                            {model.features.map((feature, i) => (
                              <span key={i} className="text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded">
                                {feature}
                              </span>
                            ))}
                          </div>
                        </div>
                        <div className="text-right">
                          <p className="text-2xl font-bold text-gray-900">{model.price}</p>
                          <p className="text-xs text-gray-500">за 1000 токенов</p>
                        </div>
                      </div>
                    </button>
                  ))}
                </div>

                <div className="mt-6 p-4 bg-blue-50 rounded-lg">
                  <div className="flex items-start space-x-2">
                    <AlertCircle className="w-5 h-5 text-blue-600 mt-0.5" />
                    <div>
                      <p className="text-sm text-blue-900 font-medium">Рекомендация</p>
                      <p className="text-sm text-blue-700 mt-1">
                        Для начала рекомендуем GPT-3.5 Turbo — оптимальное соотношение цены и качества
                      </p>
                    </div>
                  </div>
                </div>

                <div className="mt-8 flex justify-between">
                  <button 
                    onClick={() => setCreateBotStep(3)}
                    className="text-gray-600 px-6 py-2 hover:text-gray-900 transition-colors"
                  >
                    ← Назад
                  </button>
                  <button 
                    onClick={() => setCreateBotStep(5)}
                    className="bg-indigo-600 text-white px-6 py-2 rounded-lg hover:bg-indigo-700 transition-colors"
                  >
                    Далее →
                  </button>
                </div>
              </div>
            )}

            {createBotStep === 5 && (
              <div>
                <h2 className="text-2xl font-bold text-gray-900 mb-2">Протестируйте бота</h2>
                <p className="text-gray-600 mb-6">Попробуйте пообщаться с ботом перед запуском</p>

                <div className="bg-gray-50 rounded-xl p-6">
                  <div className="bg-white rounded-lg shadow-sm">
                    <div className="p-4 border-b border-gray-200">
                      <div className="flex items-center space-x-3">
                        <div className="w-10 h-10 bg-indigo-500 rounded-full flex items-center justify-center">
                          <Bot className="w-6 h-6 text-white" />
                        </div>
                        <div>
                          <h3 className="font-medium text-gray-900">{botSettings.name || 'Тестовый бот'}</h3>
                          <p className="text-xs text-green-600 flex items-center">
                            <span className="w-2 h-2 bg-green-500 rounded-full mr-1"></span>
                            Онлайн
                          </p>
                        </div>
                      </div>
                    </div>

                    <div className="h-80 overflow-y-auto p-4 space-y-4">
                      {testMessages.length === 0 ? (
                        <div className="text-center py-8">
                          <MessageSquare className="w-12 h-12 text-gray-300 mx-auto mb-3" />
                          <p className="text-gray-500">Начните диалог с ботом</p>
                        </div>
                      ) : (
                        testMessages.map((message, i) => (
                          <div key={i} className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}>
                            <div className={`max-w-xs px-4 py-2 rounded-lg ${
                              message.type === 'user' 
                                ? 'bg-indigo-600 text-white' 
                                : 'bg-gray-100 text-gray-900'
                            }`}>
                              {message.text}
                            </div>
                          </div>
                        ))
                      )}
                    </div>

                    <div className="p-4 border-t border-gray-200">
                      <div className="flex space-x-2">
                        <input 
                          type="text"
                          value={currentTestMessage}
                          onChange={(e) => setCurrentTestMessage(e.target.value)}
                          onKeyPress={(e) => e.key === 'Enter' && sendTestMessage()}
                          className="flex-1 px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                          placeholder="Напишите сообщение..."
                        />
                        <button 
                          onClick={sendTestMessage}
                          className="bg-indigo-600 text-white p-2 rounded-lg hover:bg-indigo-700 transition-colors"
                        >
                          <Send size={20} />
                        </button>
                      </div>
                    </div>
                  </div>

                  <div className="mt-4 bg-yellow-50 p-3 rounded-lg">
                    <p className="text-sm text-yellow-800">
                      <strong>Примеры вопросов:</strong> "Расскажи о курсе", "Какие темы изучаются?", "Сколько длится обучение?"
                    </p>
                  </div>
                </div>

                <div className="mt-8 flex justify-between">
                  <button 
                    onClick={() => setCreateBotStep(4)}
                    className="text-gray-600 px-6 py-2 hover:text-gray-900 transition-colors"
                  >
                    ← Назад
                  </button>
                  <button 
                    onClick={() => {
                      setActiveSection('bots');
                      setCreateBotStep(0);
                    }}
                    className="bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition-colors flex items-center space-x-2"
                  >
                    <Check size={20} />
                    <span>Создать бота</span>
                  </button>
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    );
  };

  // Компонент списка ботов
  const BotsList = () => {
    const [selectedBot, setSelectedBot] = useState(null);
    const [viewMode, setViewMode] = useState('grid'); // grid или list
    
    const bots = [
      { 
        id: 1, 
        name: 'Консультант курса "Python Pro"', 
        type: 'consultant',
        status: 'active',
        messages: 1247,
        rating: 4.8,
        channels: ['telegram', 'web'],
        model: 'GPT-4',
        instruction: 'Помогаю студентам изучать Python, отвечаю на вопросы по курсу, объясняю сложные концепции простым языком',
        knowledgeBase: ['Основы Python для начинающих.pdf', 'Продвинутый Python.pdf', 'FAQ по курсу.docx'],
        lastActive: '5 минут назад',
        conversions: 15.2,
        avgResponseTime: '1.2с'
      },
      { 
        id: 2, 
        name: 'Наставник новичков', 
        type: 'mentor',
        status: 'active',
        messages: 892,
        rating: 4.9,
        channels: ['telegram', 'vk'],
        model: 'Claude 3',
        instruction: 'Мотивирую и поддерживаю студентов, помогаю преодолевать трудности в обучении, даю персональные рекомендации',
        knowledgeBase: ['Методики обучения.pdf', 'Психология мотивации.docx'],
        lastActive: '1 час назад',
        conversions: 8.7,
        avgResponseTime: '0.9с'
      },
      { 
        id: 3, 
        name: 'Продавец курсов', 
        type: 'sales',
        status: 'paused',
        messages: 456,
        rating: 4.5,
        channels: ['web'],
        model: 'GPT-3.5 Turbo',
        instruction: 'Консультирую по выбору курсов, рассказываю о программах обучения, помогаю с оформлением заказа',
        knowledgeBase: ['Каталог курсов.xlsx', 'Прайс-лист.pdf'],
        lastActive: '3 дня назад',
        conversions: 22.1,
        avgResponseTime: '1.5с'
      }
    ];

    if (createBotStep > 0) {
      return <CreateBot />;
    }

    // Детальный вид бота
    if (selectedBot) {
      const bot = bots.find(b => b.id === selectedBot);
      return (
        <div className="p-6">
          <button 
            onClick={() => setSelectedBot(null)}
            className="flex items-center space-x-2 text-gray-600 hover:text-gray-900 mb-6"
          >
            <ChevronLeft size={20} />
            <span>Назад к списку</span>
          </button>

          <div className="bg-white rounded-xl border border-gray-200">
            {/* Заголовок */}
            <div className="p-6 border-b border-gray-200">
              <div className="flex items-start justify-between">
                <div className="flex items-center space-x-4">
                  <div className={`w-16 h-16 rounded-full flex items-center justify-center ${
                    bot.type === 'consultant' ? 'bg-blue-100' :
                    bot.type === 'mentor' ? 'bg-green-100' : 'bg-purple-100'
                  }`}>
                    {bot.type === 'consultant' && <MessageSquare className="w-8 h-8 text-blue-600" />}
                    {bot.type === 'mentor' && <Users className="w-8 h-8 text-green-600" />}
                    {bot.type === 'sales' && <Target className="w-8 h-8 text-purple-600" />}
                  </div>
                  <div>
                    <h2 className="text-2xl font-bold text-gray-900">{bot.name}</h2>
                    <div className="flex items-center space-x-4 mt-2">
                      <span className={`px-3 py-1 text-sm rounded-full ${
                        bot.status === 'active' 
                          ? 'bg-green-100 text-green-800' 
                          : 'bg-yellow-100 text-yellow-800'
                      }`}>
                        {bot.status === 'active' ? 'Активен' : 'На паузе'}
                      </span>
                      <span className="text-sm text-gray-600">Последняя активность: {bot.lastActive}</span>
                    </div>
                  </div>
                </div>
                <div className="flex space-x-2">
                  <button className="px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50">
                    <Settings size={20} />
                  </button>
                  <button className="px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700">
                    Редактировать
                  </button>
                </div>
              </div>
            </div>

            {/* Контент */}
            <div className="p-6 grid grid-cols-1 lg:grid-cols-3 gap-6">
              {/* Левая колонка - основная информация */}
              <div className="lg:col-span-2 space-y-6">
                {/* Метрики */}
                <div>
                  <h3 className="text-lg font-semibold text-gray-900 mb-4">Показатели</h3>
                  <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                    <div className="bg-gray-50 p-4 rounded-lg">
                      <p className="text-sm text-gray-600">Диалогов</p>
                      <p className="text-2xl font-bold text-gray-900">{bot.messages}</p>
                    </div>
                    <div className="bg-gray-50 p-4 rounded-lg">
                      <p className="text-sm text-gray-600">Рейтинг</p>
                      <div className="flex items-center space-x-1">
                        <Star className="w-5 h-5 text-yellow-500 fill-current" />
                        <span className="text-2xl font-bold text-gray-900">{bot.rating}</span>
                      </div>
                    </div>
                    <div className="bg-gray-50 p-4 rounded-lg">
                      <p className="text-sm text-gray-600">Конверсия</p>
                      <p className="text-2xl font-bold text-gray-900">{bot.conversions}%</p>
                    </div>
                    <div className="bg-gray-50 p-4 rounded-lg">
                      <p className="text-sm text-gray-600">Время ответа</p>
                      <p className="text-2xl font-bold text-gray-900">{bot.avgResponseTime}</p>
                    </div>
                  </div>
                </div>

                {/* Инструкция */}
                <div>
                  <h3 className="text-lg font-semibold text-gray-900 mb-4">Инструкция бота</h3>
                  <div className="bg-gray-50 p-4 rounded-lg">
                    <p className="text-gray-700">{bot.instruction}</p>
                  </div>
                </div>

                {/* База знаний */}
                <div>
                  <h3 className="text-lg font-semibold text-gray-900 mb-4">Подключенная база знаний</h3>
                  
                  {/* Загруженные файлы */}
                  <div className="mb-4">
                    <h4 className="text-sm font-medium text-gray-700 mb-2">Загруженные файлы</h4>
                    <div className="space-y-2">
                      {bot.knowledgeBase.map((file, i) => (
                        <div key={i} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                          <div className="flex items-center space-x-3">
                            <FileText className="w-5 h-5 text-gray-400" />
                            <span className="text-sm text-gray-900">{file}</span>
                          </div>
                          <button className="text-indigo-600 hover:text-indigo-800">
                            <Eye size={16} />
                          </button>
                        </div>
                      ))}
                    </div>
                  </div>

                  {/* Контент с платформы */}
                  <div>
                    <h4 className="text-sm font-medium text-gray-700 mb-2">Контент с платформы xl.ru</h4>
                    <div className="space-y-2">
                      <div className="flex items-center justify-between p-3 bg-purple-50 rounded-lg">
                        <div className="flex items-center space-x-3">
                          <BookOpen className="w-5 h-5 text-purple-600" />
                          <div>
                            <span className="text-sm font-medium text-gray-900">Python для начинающих</span>
                            <p className="text-xs text-gray-600">24 урока • 1247 студентов</p>
                          </div>
                        </div>
                        <span className="text-xs bg-green-100 text-green-800 px-2 py-1 rounded">API</span>
                      </div>
                      <div className="flex items-center justify-between p-3 bg-blue-50 rounded-lg">
                        <div className="flex items-center space-x-3">
                          <Mic className="w-5 h-5 text-blue-600" />
                          <div>
                            <span className="text-sm font-medium text-gray-900">Вебинар: Введение в ML</span>
                            <p className="text-xs text-gray-600">2 часа • Есть запись</p>
                          </div>
                        </div>
                        <span className="text-xs bg-green-100 text-green-800 px-2 py-1 rounded">API</span>
                      </div>
                    </div>
                  </div>

                  <button className="mt-3 text-sm text-indigo-600 hover:text-indigo-800">
                    + Добавить контент
                  </button>
                </div>
              </div>

              {/* Правая колонка - настройки */}
              <div className="space-y-6">
                {/* AI модель */}
                <div>
                  <h3 className="text-lg font-semibold text-gray-900 mb-4">AI модель</h3>
                  <div className="bg-gray-50 p-4 rounded-lg">
                    <div className="flex items-center justify-between">
                      <div>
                        <p className="font-medium text-gray-900">{bot.model}</p>
                        <p className="text-sm text-gray-600">0.03₽ за 1000 токенов</p>
                      </div>
                      <Brain className="w-8 h-8 text-indigo-600" />
                    </div>
                  </div>
                </div>

                {/* Интеграции */}
                <div>
                  <h3 className="text-lg font-semibold text-gray-900 mb-4">Активные интеграции</h3>
                  <div className="space-y-3">
                    {bot.channels.includes('telegram') && (
                      <div className="flex items-center justify-between p-3 bg-blue-50 rounded-lg">
                        <div className="flex items-center space-x-3">
                          <Send className="w-5 h-5 text-blue-600" />
                          <span className="text-sm font-medium text-blue-900">Telegram</span>
                        </div>
                        <span className="text-xs text-blue-700">@xlschool_bot</span>
                      </div>
                    )}
                    {bot.channels.includes('vk') && (
                      <div className="flex items-center justify-between p-3 bg-blue-50 rounded-lg">
                        <div className="flex items-center space-x-3">
                          <MessageSquare className="w-5 h-5 text-blue-600" />
                          <span className="text-sm font-medium text-blue-900">ВКонтакте</span>
                        </div>
                        <span className="text-xs text-blue-700">XL School</span>
                      </div>
                    )}
                    {bot.channels.includes('web') && (
                      <div className="flex items-center justify-between p-3 bg-gray-100 rounded-lg">
                        <div className="flex items-center space-x-3">
                          <Globe className="w-5 h-5 text-gray-600" />
                          <span className="text-sm font-medium text-gray-900">Веб-виджет</span>
                        </div>
                        <span className="text-xs text-gray-700">xl.ru</span>
                      </div>
                    )}
                  </div>
                  <button className="mt-3 text-sm text-indigo-600 hover:text-indigo-800">
                    + Добавить канал
                  </button>
                </div>

                {/* Действия */}
                <div className="pt-6 border-t border-gray-200">
                  <div className="space-y-2">
                    <button className="w-full px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700">
                      Открыть в редакторе
                    </button>
                    <button className="w-full px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50">
                      Просмотр диалогов
                    </button>
                    <button className="w-full px-4 py-2 text-red-600 hover:text-red-800">
                      Удалить бота
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      );
    }

    // Основной список ботов
    return (
      <div className="p-6">
        <div className="flex justify-between items-center mb-6">
          <div>
            <h1 className="text-2xl font-bold text-gray-900">Мои боты</h1>
            <p className="text-gray-600 mt-1">Управляйте вашими AI-ассистентами</p>
          </div>
          <div className="flex items-center space-x-3">
            {/* Переключатель вида */}
            <div className="flex bg-gray-100 rounded-lg p-1">
              <button
                onClick={() => setViewMode('grid')}
                className={`p-2 rounded ${viewMode === 'grid' ? 'bg-white shadow-sm' : 'text-gray-600'}`}
              >
                <Grid3X3 size={20} />
              </button>
              <button
                onClick={() => setViewMode('list')}
                className={`p-2 rounded ${viewMode === 'list' ? 'bg-white shadow-sm' : 'text-gray-600'}`}
              >
                <Menu size={20} />
              </button>
            </div>
            
            {/* Кнопка создания AI клона */}
            <button 
              onClick={() => {
                // Открыть специальный wizard для создания клона
                alert('Функция создания AI клона будет доступна в следующей версии');
              }}
              className="bg-purple-600 text-white px-4 py-2 rounded-lg flex items-center space-x-2 hover:bg-purple-700 transition-colors shadow-md"
            >
              <Sparkles size={20} />
              <span>Сделать ИИ Клона</span>
            </button>
            
            <button 
              onClick={() => setCreateBotStep(1)}
              className="bg-indigo-600 text-white px-4 py-2 rounded-lg flex items-center space-x-2 hover:bg-indigo-700 transition-colors shadow-md"
            >
              <Plus size={20} />
              <span>Создать бота</span>
            </button>
          </div>
        </div>

        {/* Статистика */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
          <div className="bg-white p-4 rounded-xl border border-gray-200">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-gray-600">Всего ботов</p>
                <p className="text-2xl font-bold text-gray-900">3</p>
              </div>
              <Bot className="w-8 h-8 text-indigo-500" />
            </div>
          </div>
          <div className="bg-white p-4 rounded-xl border border-gray-200">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-gray-600">Активных</p>
                <p className="text-2xl font-bold text-gray-900">2</p>
              </div>
              <Activity className="w-8 h-8 text-green-500" />
            </div>
          </div>
          <div className="bg-white p-4 rounded-xl border border-gray-200">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-gray-600">Диалогов сегодня</p>
                <p className="text-2xl font-bold text-gray-900">147</p>
              </div>
              <MessageSquare className="w-8 h-8 text-blue-500" />
            </div>
          </div>
          <div className="bg-white p-4 rounded-xl border border-gray-200">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-gray-600">Средний рейтинг</p>
                <p className="text-2xl font-bold text-gray-900">4.7</p>
              </div>
              <Star className="w-8 h-8 text-yellow-500" />
            </div>
          </div>
        </div>

        {/* Промо блок AI клона */}
        <div className="bg-gradient-to-r from-purple-600 to-indigo-600 rounded-xl p-6 mb-6 text-white">
          <div className="flex items-center justify-between">
            <div className="flex items-start space-x-4">
              <div className="w-12 h-12 bg-white/20 rounded-lg flex items-center justify-center">
                <Brain className="w-8 h-8 text-white" />
              </div>
              <div>
                <h3 className="text-xl font-bold mb-2">Создайте AI клона эксперта</h3>
                <p className="text-purple-100 mb-3 max-w-2xl">
                  Превратите ваших лучших преподавателей и экспертов в AI-ассистентов. 
                  Загрузите их материалы, запишите видео-интервью, и мы создадим цифрового двойника, 
                  который будет отвечать студентам в стиле эксперта.
                </p>
                <div className="flex items-center space-x-4">
                  <button className="bg-white text-purple-600 px-4 py-2 rounded-lg font-medium hover:bg-purple-50 transition-colors">
                    Узнать больше
                  </button>
                  <span className="text-purple-200 text-sm">Доступно на тарифах Professional и Enterprise</span>
                </div>
              </div>
            </div>
            <button className="text-white/60 hover:text-white">
              <X size={24} />
            </button>
          </div>
        </div>

        {/* Список ботов */}
        {viewMode === 'grid' ? (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {bots.map(bot => (
              <div 
                key={bot.id} 
                className="bg-white rounded-xl border border-gray-200 p-6 hover:shadow-lg transition-shadow cursor-pointer"
                onClick={() => setSelectedBot(bot.id)}
              >
                <div className="flex justify-between items-start mb-4">
                  <div className="flex items-center space-x-3">
                    <div className={`w-12 h-12 rounded-full flex items-center justify-center ${
                      bot.type === 'consultant' ? 'bg-blue-100' :
                      bot.type === 'mentor' ? 'bg-green-100' : 'bg-purple-100'
                    }`}>
                      {bot.type === 'consultant' && <MessageSquare className="w-6 h-6 text-blue-600" />}
                      {bot.type === 'mentor' && <Users className="w-6 h-6 text-green-600" />}
                      {bot.type === 'sales' && <Target className="w-6 h-6 text-purple-600" />}
                    </div>
                    <div className="flex-1">
                      <h3 className="font-semibold text-gray-900 line-clamp-1">{bot.name}</h3>
                      <span className={`text-xs px-2 py-1 rounded-full ${
                        bot.status === 'active' 
                          ? 'bg-green-100 text-green-800' 
                          : 'bg-yellow-100 text-yellow-800'
                      }`}>
                        {bot.status === 'active' ? 'Активен' : 'На паузе'}
                      </span>
                    </div>
                  </div>
                  <button 
                    className="text-gray-400 hover:text-gray-600"
                    onClick={(e) => {
                      e.stopPropagation();
                      // Меню действий
                    }}
                  >
                    <MoreVertical size={20} />
                  </button>
                </div>

                <div className="space-y-3">
                  <div className="flex items-center justify-between text-sm">
                    <span className="text-gray-600">Модель</span>
                    <span className="font-medium text-gray-900">{bot.model}</span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span className="text-gray-600">Сообщений</span>
                    <span className="font-medium text-gray-900">{bot.messages.toLocaleString()}</span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span className="text-gray-600">Рейтинг</span>
                    <div className="flex items-center space-x-1">
                      <Star className="w-4 h-4 text-yellow-500 fill-current" />
                      <span className="font-medium text-gray-900">{bot.rating}</span>
                    </div>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span className="text-gray-600">Каналы</span>
                    <div className="flex space-x-2">
                      {bot.channels.includes('telegram') && <Send className="w-4 h-4 text-gray-500" />}
                      {bot.channels.includes('vk') && <MessageSquare className="w-4 h-4 text-gray-500" />}
                      {bot.channels.includes('web') && <Globe className="w-4 h-4 text-gray-500" />}
                    </div>
                  </div>
                </div>

                <div className="mt-4 pt-4 border-t border-gray-200 flex space-x-2">
                  <button 
                    className="flex-1 text-sm text-indigo-600 hover:text-indigo-800 font-medium"
                    onClick={(e) => {
                      e.stopPropagation();
                      setSelectedBot(bot.id);
                    }}
                  >
                    Управление
                  </button>
                  <button 
                    className="flex-1 text-sm text-gray-600 hover:text-gray-800"
                    onClick={(e) => {
                      e.stopPropagation();
                      // Переход к статистике
                    }}
                  >
                    Статистика
                  </button>
                </div>
              </div>
            ))}
          </div>
        ) : (
          <div className="bg-white rounded-xl border border-gray-200 overflow-hidden">
            <table className="w-full">
              <thead className="bg-gray-50 border-b border-gray-200">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Бот
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Модель
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Статус
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Показатели
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Интеграции
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    База знаний
                  </th>
                  <th className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Действия
                  </th>
                </tr>
              </thead>
              <tbody className="divide-y divide-gray-200">
                {bots.map(bot => (
                  <tr 
                    key={bot.id} 
                    className="hover:bg-gray-50 cursor-pointer"
                    onClick={() => setSelectedBot(bot.id)}
                  >
                    <td className="px-6 py-4">
                      <div className="flex items-center space-x-3">
                        <div className={`w-10 h-10 rounded-full flex items-center justify-center ${
                          bot.type === 'consultant' ? 'bg-blue-100' :
                          bot.type === 'mentor' ? 'bg-green-100' : 'bg-purple-100'
                        }`}>
                          {bot.type === 'consultant' && <MessageSquare className="w-5 h-5 text-blue-600" />}
                          {bot.type === 'mentor' && <Users className="w-5 h-5 text-green-600" />}
                          {bot.type === 'sales' && <Target className="w-5 h-5 text-purple-600" />}
                        </div>
                        <div>
                          <p className="font-medium text-gray-900">{bot.name}</p>
                          <p className="text-sm text-gray-500 max-w-xs truncate">{bot.instruction}</p>
                        </div>
                      </div>
                    </td>
                    <td className="px-6 py-4">
                      <span className="text-sm text-gray-900">{bot.model}</span>
                    </td>
                    <td className="px-6 py-4">
                      <span className={`px-2 py-1 text-xs rounded-full ${
                        bot.status === 'active' 
                          ? 'bg-green-100 text-green-800' 
                          : 'bg-yellow-100 text-yellow-800'
                      }`}>
                        {bot.status === 'active' ? 'Активен' : 'На паузе'}
                      </span>
                    </td>
                    <td className="px-6 py-4">
                      <div className="text-sm">
                        <p className="text-gray-900">{bot.messages} диалогов</p>
                        <p className="text-gray-500">⭐ {bot.rating} • {bot.conversions}% конв.</p>
                      </div>
                    </td>
                    <td className="px-6 py-4">
                      <div className="flex space-x-2">
                        {bot.channels.includes('telegram') && (
                          <span className="inline-flex items-center px-2 py-1 rounded text-xs bg-blue-100 text-blue-800">
                            <Send className="w-3 h-3 mr-1" />
                            TG
                          </span>
                        )}
                        {bot.channels.includes('vk') && (
                          <span className="inline-flex items-center px-2 py-1 rounded text-xs bg-blue-100 text-blue-800">
                            <MessageSquare className="w-3 h-3 mr-1" />
                            VK
                          </span>
                        )}
                        {bot.channels.includes('web') && (
                          <span className="inline-flex items-center px-2 py-1 rounded text-xs bg-gray-100 text-gray-800">
                            <Globe className="w-3 h-3 mr-1" />
                            Web
                          </span>
                        )}
                      </div>
                    </td>
                    <td className="px-6 py-4">
                      <p className="text-sm text-gray-900">{bot.knowledgeBase.length} файлов</p>
                    </td>
                    <td className="px-6 py-4 text-right">
                      <button 
                        className="text-indigo-600 hover:text-indigo-900"
                        onClick={(e) => {
                          e.stopPropagation();
                          // Меню действий
                        }}
                      >
                        <MoreVertical size={20} />
                      </button>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        )}
      </div>
    );
  };

  // Компонент аналитики
  const Analytics = () => (
    <div className="p-6">
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-2xl font-bold text-gray-900">Аналитика</h1>
        <div className="flex space-x-2">
          <select className="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
            <option>Все боты</option>
            <option>Консультант курса</option>
            <option>Наставник</option>
            <option>Продавец</option>
          </select>
          <select className="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
            <option>Последние 7 дней</option>
            <option>Последние 30 дней</option>
            <option>Последние 3 месяца</option>
          </select>
        </div>
      </div>

      {/* Метрики */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
        <div className="bg-white p-6 rounded-xl border border-gray-200">
          <div className="flex items-center justify-between mb-2">
            <p className="text-sm text-gray-600">Всего диалогов</p>
            <MessageSquare className="w-5 h-5 text-gray-400" />
          </div>
          <p className="text-2xl font-bold text-gray-900">3,429</p>
          <p className="text-sm text-green-600 mt-2">↑ 12% vs прошлая неделя</p>
        </div>

        <div className="bg-white p-6 rounded-xl border border-gray-200">
          <div className="flex items-center justify-between mb-2">
            <p className="text-sm text-gray-600">Конверсия в продажи</p>
            <DollarSign className="w-5 h-5 text-gray-400" />
          </div>
          <p className="text-2xl font-bold text-gray-900">8.7%</p>
          <p className="text-sm text-green-600 mt-2">↑ 2.3% vs прошлая неделя</p>
        </div>

        <div className="bg-white p-6 rounded-xl border border-gray-200">
          <div className="flex items-center justify-between mb-2">
            <p className="text-sm text-gray-600">Среднее время ответа</p>
            <Clock className="w-5 h-5 text-gray-400" />
          </div>
          <p className="text-2xl font-bold text-gray-900">1.2с</p>
          <p className="text-sm text-gray-600 mt-2">→ без изменений</p>
        </div>

        <div className="bg-white p-6 rounded-xl border border-gray-200">
          <div className="flex items-center justify-between mb-2">
            <p className="text-sm text-gray-600">Удовлетворенность</p>
            <Star className="w-5 h-5 text-gray-400" />
          </div>
          <p className="text-2xl font-bold text-gray-900">92%</p>
          <p className="text-sm text-green-600 mt-2">↑ 3% vs прошлая неделя</p>
        </div>
      </div>

      {/* Графики */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6">
        <div className="bg-white p-6 rounded-xl border border-gray-200">
          <h3 className="text-lg font-semibold text-gray-900 mb-4">Динамика диалогов</h3>
          <div className="h-64 flex items-end justify-between space-x-1">
            {Array.from({length: 30}, (_, i) => (
              <div 
                key={i} 
                className="flex-1 bg-indigo-100 hover:bg-indigo-200 transition-colors rounded-t"
                style={{height: `${Math.random() * 80 + 20}%`}}
              />
            ))}
          </div>
        </div>

        <div className="bg-white p-6 rounded-xl border border-gray-200">
          <h3 className="text-lg font-semibold text-gray-900 mb-4">Воронка конверсии</h3>
          <div className="space-y-4">
            <div>
              <div className="flex justify-between mb-1">
                <span className="text-sm text-gray-700">Начали диалог</span>
                <span className="text-sm font-medium">100%</span>
              </div>
              <div className="w-full bg-gray-200 rounded-full h-8">
                <div className="bg-indigo-600 h-8 rounded-full" style={{width: '100%'}}></div>
              </div>
            </div>
            <div>
              <div className="flex justify-between mb-1">
                <span className="text-sm text-gray-700">Задали вопрос о курсе</span>
                <span className="text-sm font-medium">67%</span>
              </div>
              <div className="w-full bg-gray-200 rounded-full h-8">
                <div className="bg-indigo-600 h-8 rounded-full" style={{width: '67%'}}></div>
              </div>
            </div>
            <div>
              <div className="flex justify-between mb-1">
                <span className="text-sm text-gray-700">Перешли на страницу курса</span>
                <span className="text-sm font-medium">34%</span>
              </div>
              <div className="w-full bg-gray-200 rounded-full h-8">
                <div className="bg-indigo-600 h-8 rounded-full" style={{width: '34%'}}></div>
              </div>
            </div>
            <div>
              <div className="flex justify-between mb-1">
                <span className="text-sm text-gray-700">Оформили покупку</span>
                <span className="text-sm font-medium">8.7%</span>
              </div>
              <div className="w-full bg-gray-200 rounded-full h-8">
                <div className="bg-green-600 h-8 rounded-full" style={{width: '8.7%'}}></div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Топ вопросы */}
      <div className="bg-white rounded-xl border border-gray-200">
        <div className="p-6 border-b border-gray-200">
          <h3 className="text-lg font-semibold text-gray-900">Топ-10 популярных вопросов</h3>
        </div>
        <div className="divide-y divide-gray-200">
          {[
            { question: 'Сколько стоит курс?', count: 342 },
            { question: 'Какая длительность обучения?', count: 289 },
            { question: 'Есть ли рассрочка?', count: 234 },
            { question: 'Выдается ли сертификат?', count: 198 },
            { question: 'Какие требования для начала?', count: 176 }
          ].map((item, i) => (
            <div key={i} className="p-4 hover:bg-gray-50 transition-colors">
              <div className="flex justify-between items-center">
                <span className="text-gray-900">{item.question}</span>
                <span className="text-sm text-gray-600">{item.count} раз</span>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );

  // Компонент База знаний
  const KnowledgeBase = () => {
    const [selectedCategory, setSelectedCategory] = useState('all');
    const [selectedFile, setSelectedFile] = useState(null);
    const [searchQuery, setSearchQuery] = useState('');
    const [activeTab, setActiveTab] = useState('uploaded'); // uploaded, platform, bot-specific
    const [selectedBot, setSelectedBot] = useState('all'); // для фильтрации по ботам

    const categories = [
      { id: 'all', name: 'Все материалы', count: 156 },
      { id: 'courses', name: 'Курсы', count: 45 },
      { id: 'webinars', name: 'Вебинары', count: 32 },
      { id: 'articles', name: 'Статьи', count: 67 },
      { id: 'faq', name: 'FAQ', count: 12 }
    ];

    const files = [
      { 
        id: 1, 
        name: 'Основы Python для начинающих.pdf', 
        category: 'courses', 
        size: '12.4 MB',
        modified: '2 дня назад',
        version: 'v2.1',
        tags: ['python', 'программирование', 'основы'],
        bots: ['Консультант курса "Python Pro"']
      },
      { 
        id: 2, 
        name: 'Вебинар: Машинное обучение.mp4', 
        category: 'webinars', 
        size: '245 MB',
        modified: '1 неделю назад',
        version: 'v1.0',
        tags: ['ML', 'AI', 'вебинар'],
        bots: ['Консультант курса "Python Pro"', 'Наставник новичков']
      },
      { 
        id: 3, 
        name: 'FAQ по курсу Data Science.docx', 
        category: 'faq', 
        size: '1.2 MB',
        modified: '3 часа назад',
        version: 'v3.2',
        tags: ['FAQ', 'data science'],
        bots: ['Продавец курсов']
      }
    ];

    // Контент с платформы
    const platformContent = [
      {
        id: 'course-1',
        type: 'course',
        name: 'Python для начинающих',
        lessons: 24,
        duration: '36 часов',
        students: 1247,
        rating: 4.8,
        author: 'Иван Петров',
        integrated: true
      },
      {
        id: 'course-2',
        type: 'course',
        name: 'Машинное обучение с нуля',
        lessons: 32,
        duration: '48 часов',
        students: 892,
        rating: 4.9,
        author: 'Мария Сидорова',
        integrated: false
      },
      {
        id: 'webinar-1',
        type: 'webinar',
        name: 'Введение в Data Science',
        date: '15 января 2025',
        duration: '2 часа',
        participants: 456,
        recording: true,
        integrated: true
      }
    ];

    // Боты для фильтрации
    const botsList = [
      { id: 'all', name: 'Все боты' },
      { id: 'bot-1', name: 'Консультант курса "Python Pro"' },
      { id: 'bot-2', name: 'Наставник новичков' },
      { id: 'bot-3', name: 'Продавец курсов' }
    ];

    return (
      <div className="p-6">
        <div className="flex justify-between items-center mb-6">
          <div>
            <h1 className="text-2xl font-bold text-gray-900">База знаний</h1>
            <p className="text-gray-600 mt-1">Управляйте контентом для обучения ваших ботов</p>
          </div>
          <button className="bg-indigo-600 text-white px-4 py-2 rounded-lg flex items-center space-x-2 hover:bg-indigo-700 transition-colors">
            <Upload size={20} />
            <span>Загрузить файлы</span>
          </button>
        </div>

        {/* Табы */}
        <div className="border-b border-gray-200 mb-6">
          <nav className="flex space-x-8">
            <button
              onClick={() => setActiveTab('uploaded')}
              className={`py-2 px-1 border-b-2 transition-colors ${
                activeTab === 'uploaded' 
                  ? 'border-indigo-500 text-indigo-600' 
                  : 'border-transparent text-gray-500 hover:text-gray-700'
              }`}
            >
              Загруженные файлы
            </button>
            <button
              onClick={() => setActiveTab('platform')}
              className={`py-2 px-1 border-b-2 transition-colors flex items-center space-x-2 ${
                activeTab === 'platform' 
                  ? 'border-indigo-500 text-indigo-600' 
                  : 'border-transparent text-gray-500 hover:text-gray-700'
              }`}
            >
              <span>Контент платформы</span>
              <span className="bg-green-100 text-green-800 text-xs px-2 py-0.5 rounded-full">Новое</span>
            </button>
            <button
              onClick={() => setActiveTab('bot-specific')}
              className={`py-2 px-1 border-b-2 transition-colors ${
                activeTab === 'bot-specific' 
                  ? 'border-indigo-500 text-indigo-600' 
                  : 'border-transparent text-gray-500 hover:text-gray-700'
              }`}
            >
              Базы данных ботов
            </button>
          </nav>
        </div>

        {/* Контент табов */}
        {activeTab === 'uploaded' && (
          <div className="flex gap-6">
            {/* Левая панель с категориями */}
            <div className="w-64 bg-white rounded-xl border border-gray-200 p-4">
              <h3 className="font-semibold text-gray-900 mb-4">Категории</h3>
              <div className="space-y-1">
                {categories.map(category => (
                  <button
                    key={category.id}
                    onClick={() => setSelectedCategory(category.id)}
                    className={`w-full flex items-center justify-between px-3 py-2 rounded-lg transition-colors ${
                      selectedCategory === category.id 
                        ? 'bg-indigo-50 text-indigo-700' 
                        : 'hover:bg-gray-50 text-gray-700'
                    }`}
                  >
                    <span className="text-sm">{category.name}</span>
                    <span className="text-xs bg-gray-100 px-2 py-1 rounded">{category.count}</span>
                  </button>
                ))}
              </div>

              <div className="mt-6 pt-6 border-t border-gray-200">
                <h3 className="font-semibold text-gray-900 mb-3">Теги</h3>
                <div className="flex flex-wrap gap-2">
                  {['python', 'ML', 'вебинар', 'основы', 'FAQ'].map(tag => (
                    <button
                      key={tag}
                      className="text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded hover:bg-gray-200 transition-colors"
                    >
                      {tag}
                    </button>
                  ))}
                </div>
              </div>
            </div>

            {/* Центральная панель со списком файлов */}
            <div className="flex-1">
              <div className="bg-white rounded-xl border border-gray-200">
                <div className="p-4 border-b border-gray-200">
                  <div className="flex items-center space-x-4">
                    <div className="flex-1 relative">
                      <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" />
                      <input
                        type="text"
                        value={searchQuery}
                        onChange={(e) => setSearchQuery(e.target.value)}
                        placeholder="Поиск по контенту..."
                        className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                      />
                    </div>
                    <button className="p-2 text-gray-600 hover:text-gray-900">
                      <Filter size={20} />
                    </button>
                  </div>
                </div>

                <div className="divide-y divide-gray-200">
                  {files.map(file => (
                    <div
                      key={file.id}
                      onClick={() => setSelectedFile(file)}
                      className="p-4 hover:bg-gray-50 cursor-pointer transition-colors"
                    >
                      <div className="flex items-start justify-between">
                        <div className="flex items-start space-x-3">
                          <FileText className="w-5 h-5 text-gray-400 mt-0.5" />
                          <div>
                            <h4 className="font-medium text-gray-900">{file.name}</h4>
                            <div className="flex items-center space-x-4 mt-1">
                              <span className="text-sm text-gray-500">{file.size}</span>
                              <span className="text-sm text-gray-500">Изменен {file.modified}</span>
                              <span className="text-sm text-indigo-600">{file.version}</span>
                            </div>
                            <div className="flex gap-2 mt-2">
                              {file.tags.map(tag => (
                                <span key={tag} className="text-xs bg-gray-100 text-gray-600 px-2 py-1 rounded">
                                  {tag}
                                </span>
                              ))}
                            </div>
                            {file.bots && (
                              <div className="flex items-center gap-2 mt-2">
                                <Bot className="w-4 h-4 text-gray-400" />
                                <div className="flex gap-1">
                                  {file.bots.map((bot, i) => (
                                    <span key={i} className="text-xs bg-indigo-100 text-indigo-700 px-2 py-1 rounded">
                                      {bot}
                                    </span>
                                  ))}
                                </div>
                              </div>
                            )}
                          </div>
                        </div>
                        <div className="flex space-x-2">
                          <button className="p-1 text-gray-400 hover:text-gray-600">
                            <Edit size={16} />
                          </button>
                          <button className="p-1 text-gray-400 hover:text-gray-600">
                            <Download size={16} />
                          </button>
                          <button className="p-1 text-gray-400 hover:text-red-600">
                            <Trash2 size={16} />
                          </button>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>

            {/* Правая панель с деталями */}
            {selectedFile && (
              <div className="w-80 bg-white rounded-xl border border-gray-200 p-6">
                <h3 className="font-semibold text-gray-900 mb-4">Детали файла</h3>
                
                <div className="space-y-4">
                  <div>
                    <p className="text-sm text-gray-600 mb-1">Название</p>
                    <p className="font-medium text-gray-900">{selectedFile.name}</p>
                  </div>

                  <div>
                    <p className="text-sm text-gray-600 mb-1">Размер</p>
                    <p className="text-gray-900">{selectedFile.size}</p>
                  </div>

                  <div>
                    <p className="text-sm text-gray-600 mb-1">Используется в ботах</p>
                    <div className="space-y-1 mt-2">
                      {selectedFile.bots?.map((bot, i) => (
                        <div key={i} className="text-sm bg-gray-50 px-3 py-2 rounded">
                          {bot}
                        </div>
                      ))}
                    </div>
                  </div>

                  <div className="pt-4 border-t border-gray-200">
                    <button className="w-full bg-indigo-600 text-white py-2 rounded-lg hover:bg-indigo-700 transition-colors mb-2">
                      Редактировать контент
                    </button>
                    <button className="w-full border border-gray-300 text-gray-700 py-2 rounded-lg hover:bg-gray-50 transition-colors">
                      Назначить ботам
                    </button>
                  </div>
                </div>
              </div>
            )}
          </div>
        )}

        {activeTab === 'platform' && (
          <div>
            {/* Уведомление об интеграции */}
            <div className="bg-blue-50 rounded-xl p-4 mb-6">
              <div className="flex items-start space-x-3">
                <AlertCircle className="w-5 h-5 text-blue-600 mt-0.5" />
                <div>
                  <h4 className="font-medium text-blue-900">Интеграция с платформой xl.ru</h4>
                  <p className="text-sm text-blue-700 mt-1">
                    Подключайте курсы, вебинары и другой контент напрямую из вашей платформы. 
                    Контент автоматически синхронизируется и обновляется.
                  </p>
                </div>
              </div>
            </div>

            {/* Фильтры */}
            <div className="flex items-center space-x-4 mb-4">
              <select className="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500">
                <option>Все типы контента</option>
                <option>Курсы</option>
                <option>Вебинары</option>
                <option>Статьи</option>
              </select>
              <select className="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500">
                <option>Все авторы</option>
                <option>Иван Петров</option>
                <option>Мария Сидорова</option>
              </select>
              <div className="flex-1">
                <div className="relative">
                  <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" />
                  <input
                    type="text"
                    placeholder="Поиск по контенту платформы..."
                    className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500"
                  />
                </div>
              </div>
            </div>

            {/* Список контента */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
              {platformContent.map(content => (
                <div key={content.id} className="bg-white rounded-xl border border-gray-200 p-6 hover:shadow-lg transition-shadow">
                  <div className="flex items-start justify-between mb-4">
                    <div className={`w-12 h-12 rounded-lg flex items-center justify-center ${
                      content.type === 'course' ? 'bg-purple-100' : 'bg-blue-100'
                    }`}>
                      {content.type === 'course' ? (
                        <BookOpen className="w-6 h-6 text-purple-600" />
                      ) : (
                        <Mic className="w-6 h-6 text-blue-600" />
                      )}
                    </div>
                    {content.integrated && (
                      <span className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">
                        Подключено
                      </span>
                    )}
                  </div>

                  <h3 className="font-semibold text-gray-900 mb-2">{content.name}</h3>
                  
                  {content.type === 'course' ? (
                    <div className="space-y-2 text-sm text-gray-600">
                      <p>{content.lessons} уроков • {content.duration}</p>
                      <p>{content.students} студентов</p>
                      <div className="flex items-center space-x-1">
                        <Star className="w-4 h-4 text-yellow-500 fill-current" />
                        <span>{content.rating}</span>
                      </div>
                      <p className="text-xs">Автор: {content.author}</p>
                    </div>
                  ) : (
                    <div className="space-y-2 text-sm text-gray-600">
                      <p>{content.date}</p>
                      <p>{content.duration}</p>
                      <p>{content.participants} участников</p>
                      {content.recording && (
                        <span className="text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded">
                          Есть запись
                        </span>
                      )}
                    </div>
                  )}

                  <button className={`w-full mt-4 px-4 py-2 rounded-lg transition-colors ${
                    content.integrated 
                      ? 'border border-gray-300 text-gray-700 hover:bg-gray-50'
                      : 'bg-indigo-600 text-white hover:bg-indigo-700'
                  }`}>
                    {content.integrated ? 'Управление' : 'Подключить'}
                  </button>
                </div>
              ))}
            </div>
          </div>
        )}

        {activeTab === 'bot-specific' && (
          <div>
            {/* Селектор бота */}
            <div className="mb-6">
              <label className="block text-sm font-medium text-gray-700 mb-2">Выберите бота</label>
              <select 
                value={selectedBot}
                onChange={(e) => setSelectedBot(e.target.value)}
                className="w-64 px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500"
              >
                {botsList.map(bot => (
                  <option key={bot.id} value={bot.id}>{bot.name}</option>
                ))}
              </select>
            </div>

            {selectedBot !== 'all' && (
              <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
                {/* Специфичная база данных */}
                <div className="lg:col-span-2">
                  <div className="bg-white rounded-xl border border-gray-200 p-6">
                    <h3 className="text-lg font-semibold text-gray-900 mb-4">Персональная база данных бота</h3>
                    
                    <div className="space-y-4">
                      {/* Контексты и инструкции */}
                      <div className="bg-gray-50 p-4 rounded-lg">
                        <h4 className="font-medium text-gray-900 mb-2">Дополнительные инструкции</h4>
                        <textarea 
                          className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500"
                          rows="4"
                          placeholder="Специфичные инструкции для этого бота..."
                          defaultValue="Всегда обращайся к студентам на 'вы'. Используй примеры из практики. Если студент застрял, предложи разбить задачу на части."
                        />
                      </div>

                      {/* FAQ и ответы */}
                      <div>
                        <h4 className="font-medium text-gray-900 mb-3">Частые вопросы и ответы</h4>
                        <div className="space-y-2">
                          <div className="border border-gray-200 rounded-lg p-3">
                            <p className="font-medium text-sm text-gray-900">Как получить сертификат?</p>
                            <p className="text-sm text-gray-600 mt-1">После прохождения всех модулей и финального проекта, сертификат генерируется автоматически.</p>
                          </div>
                          <div className="border border-gray-200 rounded-lg p-3">
                            <p className="font-medium text-sm text-gray-900">Есть ли поддержка после курса?</p>
                            <p className="text-sm text-gray-600 mt-1">Да, доступ к материалам сохраняется навсегда, плюс 3 месяца поддержки в чате.</p>
                          </div>
                        </div>
                        <button className="mt-3 text-sm text-indigo-600 hover:text-indigo-800">
                          + Добавить вопрос
                        </button>
                      </div>

                      {/* Персональные данные */}
                      <div>
                        <h4 className="font-medium text-gray-900 mb-3">Персональные данные и контексты</h4>
                        <div className="bg-yellow-50 p-3 rounded-lg text-sm text-yellow-800">
                          <AlertCircle className="w-4 h-4 inline mr-1" />
                          Здесь можно хранить специфичную информацию о курсе, преподавателях, расписании
                        </div>
                      </div>
                    </div>
                  </div>
                </div>

                {/* Статистика базы */}
                <div>
                  <div className="bg-white rounded-xl border border-gray-200 p-6">
                    <h3 className="text-lg font-semibold text-gray-900 mb-4">Статистика базы</h3>
                    
                    <div className="space-y-4">
                      <div>
                        <p className="text-sm text-gray-600">Объем данных</p>
                        <p className="text-xl font-bold text-gray-900">24.7 MB</p>
                      </div>
                      <div>
                        <p className="text-sm text-gray-600">Документов</p>
                        <p className="text-xl font-bold text-gray-900">156</p>
                      </div>
                      <div>
                        <p className="text-sm text-gray-600">FAQ записей</p>
                        <p className="text-xl font-bold text-gray-900">42</p>
                      </div>
                      <div>
                        <p className="text-sm text-gray-600">Последнее обновление</p>
                        <p className="text-sm text-gray-900">2 часа назад</p>
                      </div>
                    </div>

                    <button className="w-full mt-6 bg-indigo-600 text-white py-2 rounded-lg hover:bg-indigo-700">
                      Экспорт базы данных
                    </button>
                  </div>
                </div>
              </div>
            )}
          </div>
        )}
      </div>
    );
  };

  // Компонент Интеграции
  const Integrations = () => {
    const [activeTab, setActiveTab] = useState('channels');

    const channels = [
      {
        id: 'telegram',
        name: 'Telegram',
        icon: Send,
        status: 'connected',
        description: 'Подключите бота к Telegram каналу',
        bots: ['@xlschool_bot', '@support_xlbot']
      },
      {
        id: 'vk',
        name: 'ВКонтакте',
        icon: MessageSquare,
        status: 'connected',
        description: 'Интеграция с сообществом ВК',
        bots: ['XL School Community']
      },
      {
        id: 'web',
        name: 'Веб-виджет',
        icon: Globe,
        status: 'active',
        description: 'Встраиваемый чат для вашего сайта',
        code: '<script src="https://xl.ru/widget.js"></script>'
      }
    ];

    return (
      <div className="p-6">
        <div className="mb-6">
          <h1 className="text-2xl font-bold text-gray-900">Интеграции</h1>
          <p className="text-gray-600 mt-1">Подключайте ботов к различным каналам и сервисам</p>
        </div>

        {/* Табы */}
        <div className="border-b border-gray-200 mb-6">
          <nav className="flex space-x-8">
            {[
              { id: 'channels', label: 'Каналы', icon: MessageSquare },
              { id: 'api', label: 'API', icon: Key },
              { id: 'webhooks', label: 'Webhooks', icon: Zap },
              { id: 'crm', label: 'CRM', icon: Database }
            ].map(tab => (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id)}
                className={`flex items-center space-x-2 py-2 px-1 border-b-2 transition-colors ${
                  activeTab === tab.id 
                    ? 'border-indigo-500 text-indigo-600' 
                    : 'border-transparent text-gray-500 hover:text-gray-700'
                }`}
              >
                <tab.icon size={20} />
                <span>{tab.label}</span>
              </button>
            ))}
          </nav>
        </div>

        {/* Контент табов */}
        {activeTab === 'channels' && (
          <div className="space-y-4">
            {channels.map(channel => (
              <div key={channel.id} className="bg-white rounded-xl border border-gray-200 p-6">
                <div className="flex items-start justify-between">
                  <div className="flex items-start space-x-4">
                    <div className={`w-12 h-12 rounded-lg flex items-center justify-center ${
                      channel.id === 'telegram' ? 'bg-blue-100' :
                      channel.id === 'vk' ? 'bg-blue-600' : 'bg-gray-100'
                    }`}>
                      <channel.icon className={`w-6 h-6 ${
                        channel.id === 'telegram' ? 'text-blue-600' :
                        channel.id === 'vk' ? 'text-white' : 'text-gray-600'
                      }`} />
                    </div>
                    <div>
                      <h3 className="text-lg font-semibold text-gray-900">{channel.name}</h3>
                      <p className="text-sm text-gray-600 mt-1">{channel.description}</p>
                      
                      {channel.status === 'connected' && channel.bots && (
                        <div className="mt-3">
                          <p className="text-sm text-gray-700 mb-2">Подключенные боты:</p>
                          <div className="flex flex-wrap gap-2">
                            {channel.bots.map(bot => (
                              <span key={bot} className="text-sm bg-green-100 text-green-800 px-3 py-1 rounded-full">
                                {bot}
                              </span>
                            ))}
                          </div>
                        </div>
                      )}

                      {channel.id === 'web' && (
                        <div className="mt-3">
                          <p className="text-sm text-gray-700 mb-2">Код для встраивания:</p>
                          <div className="bg-gray-50 p-3 rounded-lg font-mono text-xs text-gray-800">
                            {channel.code}
                          </div>
                        </div>
                      )}
                    </div>
                  </div>
                  
                  <div className="flex items-center space-x-2">
                    {channel.status === 'connected' ? (
                      <>
                        <span className="text-sm text-green-600 flex items-center">
                          <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
                          Подключено
                        </span>
                        <button className="text-gray-600 hover:text-gray-900">
                          <Settings size={20} />
                        </button>
                      </>
                    ) : (
                      <button className="bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition-colors">
                        Подключить
                      </button>
                    )}
                  </div>
                </div>
              </div>
            ))}

            <div className="bg-blue-50 rounded-xl p-6">
              <div className="flex items-start space-x-3">
                <AlertCircle className="w-5 h-5 text-blue-600 mt-0.5" />
                <div>
                  <h4 className="font-medium text-blue-900">Управление доступами</h4>
                  <p className="text-sm text-blue-700 mt-1">
                    Вы можете настроить права доступа для каждого канала в разделе настроек бота. 
                    Ограничьте функционал или контент для разных каналов.
                  </p>
                </div>
              </div>
            </div>
          </div>
        )}

        {activeTab === 'api' && (
          <div className="space-y-6">
            <div className="bg-white rounded-xl border border-gray-200 p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">API ключи</h3>
              
              <div className="space-y-4">
                <div className="bg-gray-50 p-4 rounded-lg">
                  <div className="flex items-center justify-between mb-2">
                    <span className="text-sm font-medium text-gray-700">Production API Key</span>
                    <span className="text-xs text-gray-500">Создан 15 дней назад</span>
                  </div>
                  <div className="flex items-center space-x-2">
                    <code className="flex-1 bg-white px-3 py-2 rounded border border-gray-300 text-sm font-mono">
                      xl_prod_k3y_••••••••••••••••••••
                    </code>
                    <button className="p-2 text-gray-600 hover:text-gray-900">
                      <Eye size={20} />
                    </button>
                    <button className="p-2 text-gray-600 hover:text-gray-900">
                      <Download size={20} />
                    </button>
                  </div>
                </div>

                <div className="bg-gray-50 p-4 rounded-lg opacity-60">
                  <div className="flex items-center justify-between mb-2">
                    <span className="text-sm font-medium text-gray-700">Test API Key</span>
                    <span className="text-xs text-gray-500">Создан 30 дней назад</span>
                  </div>
                  <div className="flex items-center space-x-2">
                    <code className="flex-1 bg-white px-3 py-2 rounded border border-gray-300 text-sm font-mono">
                      xl_test_k3y_••••••••••••••••••••
                    </code>
                    <button className="p-2 text-gray-600 hover:text-gray-900">
                      <Eye size={20} />
                    </button>
                    <button className="p-2 text-gray-600 hover:text-gray-900">
                      <Download size={20} />
                    </button>
                  </div>
                </div>
              </div>

              <button className="mt-4 bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition-colors">
                Создать новый ключ
              </button>
            </div>

            <div className="bg-white rounded-xl border border-gray-200 p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">Документация API</h3>
              <p className="text-gray-600 mb-4">
                Используйте наш REST API для программного управления ботами
              </p>
              <div className="space-y-2">
                <a href="#" className="flex items-center space-x-2 text-indigo-600 hover:text-indigo-800">
                  <BookOpen size={20} />
                  <span>Руководство по началу работы</span>
                </a>
                <a href="#" className="flex items-center space-x-2 text-indigo-600 hover:text-indigo-800">
                  <FileText size={20} />
                  <span>Справочник API</span>
                </a>
                <a href="#" className="flex items-center space-x-2 text-indigo-600 hover:text-indigo-800">
                  <Download size={20} />
                  <span>Postman коллекция</span>
                </a>
              </div>
            </div>
          </div>
        )}

        {activeTab === 'webhooks' && (
          <div className="bg-white rounded-xl border border-gray-200 p-6">
            <h3 className="text-lg font-semibold text-gray-900 mb-4">Webhook настройки</h3>
            <p className="text-gray-600 mb-6">
              Получайте уведомления о событиях в реальном времени
            </p>

            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">URL для уведомлений</label>
                <input 
                  type="text"
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                  placeholder="https://your-domain.com/webhook"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">События</label>
                <div className="space-y-2">
                  {[
                    'Новое сообщение',
                    'Начало диалога',
                    'Завершение диалога',
                    'Ошибка бота',
                    'Новая подписка'
                  ].map(event => (
                    <label key={event} className="flex items-center space-x-2">
                      <input type="checkbox" className="rounded text-indigo-600" />
                      <span className="text-sm text-gray-700">{event}</span>
                    </label>
                  ))}
                </div>
              </div>

              <button className="bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition-colors">
                Сохранить настройки
              </button>
            </div>
          </div>
        )}

        {activeTab === 'crm' && (
          <div className="bg-white rounded-xl border border-gray-200 p-6">
            <div className="flex items-center space-x-4 mb-6">
              <div className="w-16 h-16 bg-indigo-100 rounded-lg flex items-center justify-center">
                <Database className="w-8 h-8 text-indigo-600" />
              </div>
              <div>
                <h3 className="text-lg font-semibold text-gray-900">Интеграция с CRM xl.ru</h3>
                <p className="text-sm text-gray-600">Синхронизируйте данные клиентов и диалогов</p>
              </div>
            </div>

            <div className="bg-green-50 p-4 rounded-lg mb-6">
              <div className="flex items-center space-x-2">
                <Check className="w-5 h-5 text-green-600" />
                <span className="text-green-800 font-medium">Интеграция активна</span>
              </div>
              <p className="text-sm text-green-700 mt-1">
                Последняя синхронизация: 5 минут назад
              </p>
            </div>

            <div className="space-y-4">
              <div className="flex items-center justify-between py-2">
                <span className="text-gray-700">Автоматическая синхронизация контактов</span>
                <label className="relative inline-flex items-center cursor-pointer">
                  <input type="checkbox" className="sr-only peer" checked readOnly />
                  <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-indigo-600"></div>
                </label>
              </div>

              <div className="flex items-center justify-between py-2">
                <span className="text-gray-700">Создавать сделки из диалогов</span>
                <label className="relative inline-flex items-center cursor-pointer">
                  <input type="checkbox" className="sr-only peer" checked readOnly />
                  <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-indigo-600"></div>
                </label>
              </div>

              <div className="flex items-center justify-between py-2">
                <span className="text-gray-700">Передавать теги и метки</span>
                <label className="relative inline-flex items-center cursor-pointer">
                  <input type="checkbox" className="sr-only peer" />
                  <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-indigo-600"></div>
                </label>
              </div>
            </div>

            <div className="mt-6 pt-6 border-t border-gray-200">
              <button className="text-red-600 hover:text-red-800 text-sm">
                Отключить интеграцию
              </button>
            </div>
          </div>
        )}
      </div>
    );
  };

  // Компонент Настройки
  const SettingsSection = () => {
    const [activeSettingsTab, setActiveSettingsTab] = useState('profile');

    const tariffs = [
      {
        name: 'Starter',
        price: '990₽',
        period: 'месяц',
        features: ['1 бот', '1000 сообщений/мес', 'Базовая аналитика', 'Email поддержка'],
        current: false
      },
      {
        name: 'Professional',
        price: '4990₽',
        period: 'месяц',
        features: ['5 ботов', '10000 сообщений/мес', 'Расширенная аналитика', 'Приоритетная поддержка', 'API доступ'],
        current: true
      },
      {
        name: 'Enterprise',
        price: '19990₽',
        period: 'месяц',
        features: ['Неограничено ботов', 'Неограничено сообщений', 'Вся аналитика', 'Персональный менеджер', 'SLA 99.9%'],
        current: false
      }
    ];

    return (
      <div className="p-6">
        <div className="mb-6">
          <h1 className="text-2xl font-bold text-gray-900">Настройки</h1>
          <p className="text-gray-600 mt-1">Управляйте вашим аккаунтом и настройками сервиса</p>
        </div>

        <div className="flex gap-6">
          {/* Боковое меню настроек */}
          <div className="w-64">
            <nav className="space-y-1">
              {[
                { id: 'profile', label: 'Профиль', icon: User },
                { id: 'team', label: 'Команда', icon: Users },
                { id: 'billing', label: 'Биллинг', icon: CreditCard },
                { id: 'api', label: 'API ключи', icon: Key },
                { id: 'notifications', label: 'Уведомления', icon: Bell }
              ].map(item => (
                <button
                  key={item.id}
                  onClick={() => setActiveSettingsTab(item.id)}
                  className={`w-full flex items-center space-x-3 px-4 py-2 rounded-lg transition-colors ${
                    activeSettingsTab === item.id 
                      ? 'bg-indigo-50 text-indigo-700' 
                      : 'hover:bg-gray-50 text-gray-700'
                  }`}
                >
                  <item.icon size={20} />
                  <span>{item.label}</span>
                </button>
              ))}
            </nav>
          </div>

          {/* Контент настроек */}
          <div className="flex-1">
            {activeSettingsTab === 'profile' && (
              <div className="bg-white rounded-xl border border-gray-200 p-6">
                <h3 className="text-lg font-semibold text-gray-900 mb-6">Профиль пользователя</h3>
                
                <div className="space-y-6 max-w-2xl">
                  <div className="flex items-start space-x-4">
                    <div className="w-20 h-20 bg-gray-200 rounded-full flex items-center justify-center">
                      <User className="w-10 h-10 text-gray-400" />
                    </div>
                    <div>
                      <button className="bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition-colors">
                        Изменить фото
                      </button>
                      <p className="text-sm text-gray-600 mt-2">JPG, PNG до 2MB</p>
                    </div>
                  </div>

                  <div className="grid grid-cols-2 gap-4">
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">Имя</label>
                      <input 
                        type="text"
                        defaultValue="Иван"
                        className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                      />
                    </div>
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">Фамилия</label>
                      <input 
                        type="text"
                        defaultValue="Иванов"
                        className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                      />
                    </div>
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">Email</label>
                    <input 
                      type="email"
                      defaultValue="user@xlschool.ru"
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                    />
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">Часовой пояс</label>
                    <select className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
                      <option>UTC+3 (Москва)</option>
                      <option>UTC+2 (Калининград)</option>
                      <option>UTC+4 (Самара)</option>
                    </select>
                  </div>

                  <div className="pt-6 border-t border-gray-200">
                    <button className="bg-indigo-600 text-white px-6 py-2 rounded-lg hover:bg-indigo-700 transition-colors">
                      Сохранить изменения
                    </button>
                  </div>
                </div>
              </div>
            )}

            {activeSettingsTab === 'team' && (
              <div className="bg-white rounded-xl border border-gray-200 p-6">
                <div className="flex items-center justify-between mb-6">
                  <h3 className="text-lg font-semibold text-gray-900">Команда</h3>
                  <button className="bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition-colors flex items-center space-x-2">
                    <Plus size={20} />
                    <span>Пригласить</span>
                  </button>
                </div>

                <div className="space-y-4">
                  {[
                    { name: 'Иван Иванов', email: 'ivan@xlschool.ru', role: 'Владелец', avatar: null },
                    { name: 'Мария Петрова', email: 'maria@xlschool.ru', role: 'Администратор', avatar: null },
                    { name: 'Алексей Сидоров', email: 'alex@xlschool.ru', role: 'Методист', avatar: null }
                  ].map((member, i) => (
                    <div key={i} className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
                      <div className="flex items-center space-x-3">
                        <div className="w-10 h-10 bg-gray-200 rounded-full flex items-center justify-center">
                          <User className="w-5 h-5 text-gray-400" />
                        </div>
                        <div>
                          <p className="font-medium text-gray-900">{member.name}</p>
                          <p className="text-sm text-gray-600">{member.email}</p>
                        </div>
                      </div>
                      <div className="flex items-center space-x-4">
                        <select className="px-3 py-1 border border-gray-300 rounded-lg text-sm">
                          <option>Владелец</option>
                          <option>Администратор</option>
                          <option>Методист</option>
                          <option>Просмотр</option>
                        </select>
                        {i > 0 && (
                          <button className="text-red-600 hover:text-red-800">
                            <Trash2 size={16} />
                          </button>
                        )}
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            )}

            {activeSettingsTab === 'billing' && (
              <div className="space-y-6">
                <div className="bg-white rounded-xl border border-gray-200 p-6">
                  <h3 className="text-lg font-semibold text-gray-900 mb-2">Текущий тариф</h3>
                  <div className="flex items-center justify-between mb-4">
                    <div>
                      <p className="text-2xl font-bold text-gray-900">Professional</p>
                      <p className="text-gray-600">4990₽ / месяц</p>
                    </div>
                    <div className="text-right">
                      <p className="text-sm text-gray-600">Следующее списание</p>
                      <p className="font-medium text-gray-900">15 февраля 2025</p>
                    </div>
                  </div>
                  <div className="bg-blue-50 p-4 rounded-lg">
                    <p className="text-sm text-blue-900">
                      Использовано 3,247 из 10,000 сообщений в этом месяце
                    </p>
                    <div className="w-full bg-blue-200 rounded-full h-2 mt-2">
                      <div className="bg-blue-600 h-2 rounded-full" style={{width: '32.47%'}}></div>
                    </div>
                  </div>
                </div>

                <div>
                  <h3 className="text-lg font-semibold text-gray-900 mb-4">Доступные тарифы</h3>
                  <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                    {tariffs.map((tariff, i) => (
                      <div key={i} className={`bg-white rounded-xl border-2 p-6 ${
                        tariff.current ? 'border-indigo-600' : 'border-gray-200'
                      }`}>
                        {tariff.current && (
                          <span className="bg-indigo-600 text-white text-xs px-2 py-1 rounded-full">
                            Текущий
                          </span>
                        )}
                        <h4 className="text-lg font-semibold text-gray-900 mt-2">{tariff.name}</h4>
                        <p className="text-3xl font-bold text-gray-900 mt-4">
                          {tariff.price}
                          <span className="text-sm font-normal text-gray-600">/{tariff.period}</span>
                        </p>
                        <ul className="space-y-2 mt-6">
                          {tariff.features.map((feature, j) => (
                            <li key={j} className="flex items-start space-x-2">
                              <Check className="w-5 h-5 text-green-500 mt-0.5" />
                              <span className="text-sm text-gray-700">{feature}</span>
                            </li>
                          ))}
                        </ul>
                        {!tariff.current && (
                          <button className="w-full mt-6 bg-indigo-600 text-white py-2 rounded-lg hover:bg-indigo-700 transition-colors">
                            Выбрать
                          </button>
                        )}
                      </div>
                    ))}
                  </div>
                </div>

                <div className="bg-white rounded-xl border border-gray-200 p-6">
                  <h3 className="text-lg font-semibold text-gray-900 mb-4">История платежей</h3>
                  <div className="space-y-3">
                    {[
                      { date: '15 января 2025', amount: '4990₽', status: 'Оплачено' },
                      { date: '15 декабря 2024', amount: '4990₽', status: 'Оплачено' },
                      { date: '15 ноября 2024', amount: '4990₽', status: 'Оплачено' }
                    ].map((payment, i) => (
                      <div key={i} className="flex items-center justify-between py-2">
                        <div>
                          <p className="font-medium text-gray-900">{payment.date}</p>
                          <p className="text-sm text-gray-600">Тариф Professional</p>
                        </div>
                        <div className="text-right">
                          <p className="font-medium text-gray-900">{payment.amount}</p>
                          <p className="text-sm text-green-600">{payment.status}</p>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    );
  };

  // Основной рендер
  return (
    <div className="flex h-screen bg-gray-50">
      <Sidebar />
      
      <div className="flex-1 overflow-auto">
        {/* Header */}
        <header className="bg-white border-b border-gray-200 px-6 py-4">
          <div className="flex justify-between items-center">
            <div className="flex items-center space-x-4">
              {sidebarCollapsed && (
                <button onClick={() => setSidebarCollapsed(false)}>
                  <Menu className="w-6 h-6 text-gray-600" />
                </button>
              )}
              <div className="relative">
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" />
                <input 
                  type="text" 
                  placeholder="Поиск..."
                  className="pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 w-96"
                />
              </div>
            </div>
            
            <div className="flex items-center space-x-4">
              <button className="relative p-2 text-gray-600 hover:text-gray-900">
                <Bell className="w-6 h-6" />
                <span className="absolute top-0 right-0 w-2 h-2 bg-red-500 rounded-full"></span>
              </button>
              <button className="p-2 text-gray-600 hover:text-gray-900">
                <HelpCircle className="w-6 h-6" />
              </button>
              <div className="flex items-center space-x-2 pl-4 border-l border-gray-200">
                <div className="w-8 h-8 bg-gray-300 rounded-full"></div>
                <span className="text-sm font-medium text-gray-700">user@xlschool.ru</span>
              </div>
            </div>
          </div>
        </header>

        {/* Content */}
        <main>
          {activeSection === 'dashboard' && <Dashboard />}
          {activeSection === 'bots' && <BotsList />}
          {activeSection === 'knowledge' && <KnowledgeBase />}
          {activeSection === 'analytics' && <Analytics />}
          {activeSection === 'integrations' && <Integrations />}
          {activeSection === 'settings' && <SettingsSection />}
        </main>
      </div>
    </div>
  );
};

export default XLBotStudio;
